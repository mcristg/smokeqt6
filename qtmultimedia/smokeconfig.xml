<config>
    <moduleName>qt6multimedia</moduleName>
    <parentModules>
        <module>qt6core</module>
        <module>qt6gui</module>
    </parentModules>
    <parts>10</parts>
    <scalarTypes>
        <!-- QString is a class, but represented as a scalar (#) in munged names -->
        <typeName>QString</typeName>
    </scalarTypes>
    <voidpTypes>
        <!-- both are classes, but they are represented as Smoke::t_voidp -->
        <typeName>QStringList</typeName>
        <typeName>QString</typeName>
    </voidpTypes>
    <exclude>
        <!-- Avoid including any functions that start with "q" thar are not
             part of Qt -->
        <signature>.*void quick_exit\(int\).*$</signature>
        <signature>.*void qsort(_[rb])?\(void\*, unsigned long, unsigned long.*</signature>
        <signature>.*(int|char\*) q(e|f|g)cvt(_r)?\(.*</signature>

        <!-- we don't want private stuff in smoke.. -->
        <signature>.*::d</signature>
        <signature>.*::d_ptr</signature>
        <signature>.*::q_ptr</signature>
        <signature>.*\(.*Private.*\).*</signature>
	
	<signature>.*operator.*</signature>

	<!-- call to deleted function 'FunctionName' -->	
	<signature>.*qHash\(QPointF, unsigned long long\).*</signature>
	<signature>.*qHash\(QPointF\).*</signature>		
	
	<signature>.*qt_initial_random_value\(.*</signature>
	<signature>.*qt_qhostinfo_lookup\(.*</signature>		
		
        <signature>^bool qt_sendSpontaneousEvent\(.*\)$</signature>
        <signature>^void qt_format_text\(.*\)$</signature>
	
	<signature>^(::)?QDataStream.*&amp;.*operator(&lt;&lt;|&gt;&gt;)\(.*QDataStream.*&amp;.*\)</signature>

        <!-- Ignore Mac types -->
        <signature>.*operator&lt;&lt;\(.*const objc_object\*\)$</signature>
    </exclude>
    <functions>
        <!-- include functions starting with 'q' -->
        <name>^q.*</name>
        <name>.*::q.*</name>
        <!-- and operators -->
        <name>.*operator.*</name>
    </functions>
    <classList>
        <class>QAudioBuffer</class>
        <class>QAudioDecoder</class>
        <class>QAudioDevice</class>
        <class>QAudioFormat</class>
        <class>QAudioInput</class>
        <class>QAudioOutput</class>
        <class>QAudioSink</class>
        <class>QAudioSource</class>
        <class>QCamera</class>
        <class>QCameraDevice</class>
        <class>QCameraFormat</class>
        <class>QImageCapture</class>
        <class>QMediaCaptureSession</class>
        <class>QMediaDevices</class>
        <class>QMediaFormat</class>
        <class>QMediaMetaData</class>
        <class>QMediaPlayer</class>
        <class>QMediaRecorder</class>
        <class>QMediaTimeRange</class>
        <class>QMediaTimeRange::Interval</class>
        <class>QPlatformAudioDecoder</class>
        <class>QPlatformAudioSink</class>
        <class>QPlatformAudioSource</class>
        <class>QSoundEffect</class>
        <class>QVideoFrame</class>
	<class>QVideoFrameFormat</class>
        <class>QVideoSink</class>

        <!-- namespaces -->
        <class>QAudio</class>
     </classList>
</config>
